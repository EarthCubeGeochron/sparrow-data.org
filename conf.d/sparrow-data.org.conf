# upstream thermochron {
#   server thermochron_gateway_1:80;
#   keepalive 30;
# }

upstream sparrow_test {
  server sparrow_test_gateway_1:80;
  keepalive 30;
}

upstream sparrow_docs {
  server docs:3000;
  keepalive 30;
}

## Add a cache for documentation assets!
proxy_cache_path /cache/
  levels=1:2 keys_zone=documentation_assets_cache:10m max_size=500m
  inactive=24h use_temp_path=off;

server {
  # SSL forwarded from upstream server
  # https://docs.nginx.com/nginx/admin-guide/load-balancer/using-proxy-protocol/
  listen 443 ssl proxy_protocol;

  server_name         sparrow-data.org;
  ssl_certificate     /etc/letsencrypt/live/sparrow-data.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/sparrow-data.org/privkey.pem;

  # Add google analytics code to the bottom of every page
  sub_filter </head> "
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-176053275-1', 'auto');
      ga('send', 'pageview');
    </script>
  </head>";
  sub_filter_once on;

  ### Locations

  location / {
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header Host $host;
		proxy_pass http://sparrow_docs/;
  }

  location /labs/basic-test/ {
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header Host $host;
		proxy_pass http://sparrow_test/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  # location /labs/thermochron-demo/ {
	# 	proxy_set_header X-Real-IP  $remote_addr;
	# 	proxy_set_header X-Forwarded-For $remote_addr;
	# 	proxy_set_header Host $host;
	# 	proxy_pass http://thermochron/;
  #   proxy_http_version 1.1;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection "Upgrade";
  # }

  # location /__webhook-listener/ {
  #   proxy_set_header X-Real-IP  $remote_addr;
	# 	proxy_set_header X-Forwarded-For $remote_addr;
	# 	proxy_set_header Host $host;
  #   proxy_pass http://webhook:8000/;
  # }
location /images {
  alias /images;
  # Serve html locally (with cache)
  try_files $uri $uri/ @proxy;
}

location /media {
  alias /media;
  # Serve html locally (with cache)
  # We might want to try to redirect large files (e.g. PDFs) directly to AWS.
  try_files $uri $uri/ @proxy;
  proxy_cache_bypass $http_secret_header;

  # Redirect parent directory to index.html if it exists
  rewrite ^/media/(.*)/$ /media/$1/index.html break;
}

## S3 bucket, but these "media" files tend to be large and aren't cached.
## Instead, we simply redirect the user to AWS to retrieve the file directly.
## If we wanted to save on S3 bandwidth, we could cache these locally, but this
## would strain our servers.
location ~ ^/media/(.*)\.(pdf|m4v|ppt|pptx) {
  proxy_set_header Host sparrow-documentation-assets.s3.amazonaws.com;
  proxy_pass $scheme://sparrow-documentation-assets.s3.amazonaws.com/media/$1;
  proxy_cache_bypass $http_secret_header;
  # Add cache bypass so we can call 
  # curl "www.site.com/pageid" -s -I -H "secret_header:true"
  # curl "https://sparrow-data.org/media/2022/oct-workshop/circular.html" -s -I -H "secret_header:true"
  # to revalidate.
}

# Proxy files from S3 bucket
location @proxy {
  # https://stackoverflow.com/questions/44639182/nginx-proxy-amazon-s3-resources

  limit_except GET {
      deny all;
  }

  proxy_http_version     1.1;
  proxy_set_header       Connection "";
  proxy_set_header       Authorization '';
  proxy_set_header       Host $proxy_host;
  proxy_hide_header      x-amz-id-2;
  proxy_hide_header      x-amz-request-id;
  # avoid passing along amazon headers
  # http://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html
  proxy_hide_header      x-amz-delete-marker;
  proxy_hide_header      x-amz-version-id;
  proxy_hide_header      x-amz-meta-server-side-encryption;
  proxy_hide_header      x-amz-server-side-encryption;
  proxy_hide_header      Strict-Transport-Security;
  proxy_hide_header      Set-Cookie;
  proxy_ignore_headers   Set-Cookie;
  proxy_intercept_errors on;

  proxy_cache            documentation_assets_cache;
  proxy_cache_revalidate on;
  proxy_cache_use_stale  error timeout updating http_500 http_502 http_503 http_504;
  proxy_cache_lock       on;
  proxy_cache_valid      200 304 60m;
  proxy_cache_valid      403 404 1m;

  add_header             Cache-Control max-age=31536000;
  add_header             X-Cache-Status $upstream_cache_status;

  proxy_cache_bypass        $http_secret_header;

  proxy_pass https://sparrow-documentation-assets.s3.amazonaws.com;
}

}
